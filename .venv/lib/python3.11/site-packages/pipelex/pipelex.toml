

[pipelex]
[pipelex.observer_config]
observer_dir = "results/observer"

[pipelex.scan_config]
excluded_dirs = [
    ".venv",
    "venv",
    "env",
    ".env",
    "virtualenv",
    ".virtualenv",
    ".git",
    "__pycache__",
    ".pytest_cache",
    ".mypy_cache",
    ".ruff_cache",
    "node_modules",
    "results",
]

[pipelex.feature_config]
# WIP/Experimental feature flags
is_pipeline_tracking_enabled = false
is_reporting_enabled = true

[pipelex.reporting_config]
is_log_costs_to_console = false
is_generate_cost_report_file_enabled = true
cost_report_dir_path = "reports"
cost_report_base_name = "cost_report"
cost_report_extension = "csv"
cost_report_unit_scale = 1.0

####################################################################################################
# Log config
####################################################################################################

[pipelex.log_config]
default_log_level = "INFO"

is_console_logging_enabled = true

json_logs_indent = 4
presentation_line_width = 120
silenced_problem_ids = ["azure_openai_no_stream_options"]
caller_info_template = "file_line"
is_caller_info_enabled = false

log_mode = "rich"

poor_loggers = []
generic_poor_logger = "#poor-log"

[pipelex.log_config.package_log_levels]
# for logger names, the dots "." have been replaced by "-" to avoid toml parsing issues
# TODO: use quotes to re-enable names with dots
anthropic = "INFO"
asyncio = "INFO"
botocore = "INFO"
botocore-credentials = "WARNING"
google = "INFO"
httpx = "WARNING"
httpcore = "INFO"
openai = "INFO"
instructor = "INFO"
urllib3-connectionpool = "INFO"
urllib3-util-retry = "INFO"

pipelex = "INFO"


[pipelex.log_config.rich_log_config]
is_show_time = false
is_show_level = true
is_link_path_enabled = true
is_markup_enabled = true
highlighter_name = "json"
is_rich_tracebacks = true
is_tracebacks_word_wrap = true
is_tracebacks_show_locals = false
tracebacks_suppress = []
keywords_to_hilight = []

[pipelex.aws_config]
api_key_method = "env"

####################################################################################################
# Cogt inference config
####################################################################################################

[cogt]

[cogt.inference_config]
inference_config_path = ".pipelex/inference"

[cogt.inference_manager_config]
is_auto_setup_preset_llm = true
is_auto_setup_preset_img_gen = true
is_auto_setup_preset_extract = true

[cogt.llm_config]
default_max_images = 100
is_structure_prompt_enabled = true
is_dump_text_prompts_enabled = false
is_dump_response_text_enabled = false

[cogt.llm_config.instructor_config]
is_openai_structured_output_enabled = false
is_dump_kwargs_enabled = false
is_dump_response_enabled = false
is_dump_error_enabled = false

[cogt.llm_config.llm_job_config]
max_retries = 3
is_streaming_enabled = false

[cogt.llm_config.generic_templates]
structure_from_preliminary_text_system = """
You are a data modeling expert specialized in extracting structure from text.
"""

structure_from_preliminary_text_user = """
Extract and structure information from this text:

{{ preliminary_text | tag }}

Now generate the JSON in the required format.
Do not create information that is not in the text.
"""

output_structure_prompt = """


---
The instance we want to generate will be for the following class:
{{ class_structure_str }}

Don't bother with JSON formatting, we'll do that as a second step.
For now, just output markdown with the details of the instance.
DO NOT create new information.
If some information is not present for an attribute, output the default value or None according to the field definition.
"""

output_structure_prompt_no_preliminary_text = """


---
The instance we want to generate will be for the following class:
{{ class_structure_str }}

DO NOT create information.
If some information is not present for an attribute, output the default value or None according to the attribute definition.
"""

####################################################################################################
# Image generation config
####################################################################################################

[cogt.img_gen_config.img_gen_job_config]
is_sync_mode = false

[cogt.img_gen_config.img_gen_param_defaults]
nb_steps = 1            # 28 is a good default for Flux, possible values are [1,2,4,8] for SDXL Lightning
quality = "low"
aspect_ratio = "square" # "square", "landscape_4_3", "landscape_16_9", "landscape_21_9", "portrait_3_4", "portrait_9_16", "portrait_9_21"
guidance_scale = 3.5
background = "auto"
is_moderated = true
safety_tolerance = 5
is_raw = false
output_format = "jpg"
seed = "auto"

[cogt.img_gen_config.fal_config]
flux_map_quality_to_steps = { "low" = 14, "medium" = 28, "high" = 56 }
sdxl_lightning_map_quality_to_steps = { "low" = 2, "medium" = 4, "high" = 8 }

####################################################################################################
# OCR config
####################################################################################################

[cogt.extract_config]
page_output_text_file_name = "page_text.md"
default_page_views_dpi = 72

####################################################################################################
# Pipelex prompting config
####################################################################################################

[pipelex.prompting_config]
default_prompting_style = { tag_style = "ticks" }

[pipelex.prompting_config.prompting_styles]
openai = { tag_style = "ticks" }
anthropic = { tag_style = "xml" }
mistral = { tag_style = "square_brackets" }
gemini = { tag_style = "xml" }

[pipelex.structure_config]
is_default_text_then_structure = false # turn this to true to get better results: generates text before structuring

####################################################################################################
# Static validation config
####################################################################################################

[pipelex.static_validation_config]
default_reaction = "raise"

[pipelex.static_validation_config.reactions]
# default_reaction is on raise
# missing_input_variable = "log"
# extraneous_input_variable = "log"
# inadequate_input_concept = "log"

####################################################################################################
# History graph config
####################################################################################################

[pipelex.tracker_config]
is_debug_mode = false
is_include_text_preview = false
is_include_interactivity = false
nb_items_limit = "unlimited"
theme = "base"
layout = "dagre"                                     # "elk", "dagre", "fixed"
sub_graph_colors = ["#e6f5ff", "#fff5f7", "#f0fff0"]
wrapping_width = "auto"

# TODO: adapt the length of the edges to different cases?
pipe_edge_style = "---->"
branch_edge_style = "-...-"
aggregate_edge_style = "-...-"
condition_edge_style = "-----"
choice_edge_style = "-----"

####################################################################################################
# Pipelex run config
####################################################################################################

[pipelex.pipe_run_config]
pipe_stack_limit = 20

####################################################################################################
# Dry run config
####################################################################################################

[pipelex.dry_run_config]
apply_to_jinja2_rendering = false
text_gen_truncate_length = 256
nb_list_items = 3
nb_extract_pages = 4
allowed_to_fail_pipes = [
    "infinite_loop_1", # Loop but only for testing purposes
    "pipe_builder",    # Still not fully proofed
]
image_urls = [
    "https://storage.googleapis.com/public_test_files_7fa6_4277_9ab/fashion/fashion_photo_1.jpg",
    "https://storage.googleapis.com/public_test_files_7fa6_4277_9ab/fashion/fashion_photo_2.png",
]

####################################################################################################
# PLX config
####################################################################################################

[pipelex.plx_config.inline_tables]
spaces_inside_curly_braces = true

[pipelex.plx_config.strings]
prefer_literal = false
force_multiline = false
length_limit_to_multiline = 100
ensure_trailing_newline = true
ensure_leading_blank_line = true

[pipelex.plx_config.concepts]
structure_field_ordering = ["type", "description", "choices", "required"]

[pipelex.plx_config.pipes]
field_ordering = ["type", "description", "inputs", "output"]

####################################################################################################
# Migration config
####################################################################################################

[migration.migration_maps.config]
definition = "description"
ocr_config = "extract_config"
ocr = "extract"
img_gen = "model"
llm_handle = "model"
llm = "model"
llm_to_structure = "model_to_structure"

[migration.migration_maps.plx]
img_gen = "model"
ocr = "model"
llm_handle = "model"
llm = "model"
llm_to_structure = "model_to_structure"


[migration.migration_maps.telemetry]
